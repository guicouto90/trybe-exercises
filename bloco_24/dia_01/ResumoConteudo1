//Resumo 24.1

//METODO UPDATE
db.colecao.updateOne(<filtro>, <update>, <opcoes>) => atualiza um atributo;
db.colecao.updateMany(<filtro>, <update>, <opcoes>) => atualiza varios atributos conforme o filtro;
EXEMPLO:
db.inventory.updateOne(
  { item: "paper" },
  { $set: { "size.uom": "cm", status: "P" } } //$set => para setar o valor selecionado;
);
*Filtro vazio atualiza o primeiro documento presente na colecao;
db.inventory.updateMany(
  { "qty": { $lt: 50 } },
  { $set: { "size.uom": "in", status: "P" } }
);

//OPERADOR MUL
$mul => operador para multiplicar o valor de um campor por um numero especificado;
EXEMPLO:
db.products.insertOne(
  { "_id": 1, "item": "ABC", "price": NumberDecimal("10.99"), "qty": 25 }
);

db.products.update(
  { _id: 1 },
  { $mul: { price: NumberDecimal("1.25"), qty: 2 } }
);
Resultado: { "_id": 1, "item": "ABC", "price": NumberDecimal("13.7375"), "qty": 50 };

//OPERARDOR INC
$inc: incrementar ou decrementar valores em um campo específico, utilizando tanto valores positivos quanto negativos;
EXEMPLO:
db.increment.insertOne(
  {
    _id: 1,
    sku: "abc123",
    quantity: 10,
    metrics: {
      orders: 2,
      ratings: 3.5
    }
  }
);
db.increment.update(
  { sku: "abc123" },
  { $inc: { quantity: -2, "metrics.orders": 1 } }
);
Resultado: {
  "_id": 1,
  "sku": "abc123",
  "quantity": 8,
  "metrics": {
    "orders": 3,
    "ratings": 3.5
  }
}

//OPERADORES $min e $max
$min : altera o valor do campo atual para o valor passado pelo método se o valor passado pelo método for menor do que o valor do campo atual.
$max : altera o valor do campo atual para o valor passado pelo método se o valor passado pelo método for maior do que o valor do campo atual.
EXEMPLO:
* $max:
db.collection.find();
Resultado: [
  { _id: 1, campo: 25 },
  { _id: 2, campo: 50 },
  { _id: 3, campo: 100 }
];
db.collection.updateMany({}, { $max: { campo: 75 } });
// Atualizando todos os valores do atributo "campo"
// para 75 caso sejam menores

db.collection.find();
Resultado:
[
  { _id: 1, campo: 75 }, // valor anterior: 25
  { _id: 2, campo: 75 }, // valor anterior: 50
  { _id: 3, campo: 100 }, // não encontrou no escopo
]

* $min
db.collection.updateMany({}, { $min: { campo: 42 } });
// Atualizando todos os valores do atributo "campo"
// para 42 caso sejam maiores

db.collection.find();
Resultado:
[
  { _id: 1, campo: 42 }, // valor anterior: 75
  { _id: 2, campo: 42 }, // valor anterior: 75
  { _id: 3, campo: 42 }, // valor anterior: 100
]

EXEMPLO COM DATAS:
use conteudo_trybe;
db.tags.insertOne(
  {
    _id: 1,
    desc: "crafts",
    dateEntered: ISODate("2019-10-01T05:00:00Z"),
    dateExpired: ISODate("2019-10-01T16:38:16Z")
  }
);
db.tags.update(
  { _id: 1 },
  {
min: { dateEntered: new Date("2019-09-25") },
max: { dateExpired: new Date("2019-10-02") }
  }
);

//OPERADOR $currentDate
$currentDate => atribui ao valor de um campo a data corrente , utilizando um tipo Date ou timestamp;
Exemplo:
use conteudo_trybe;
db.customers.insertOne(
  { _id: 1, status: "a", lastModified: ISODate("2013-10-02T01:11:18.965Z") }
);
db.customers.updateOne(
  { _id: 1 },
  { $currentDate: {
      lastModified: true,
      "cancellation.date": { $type: "timestamp" }
    }, $set: {
      "cancellation.reason": "user request",
      status: "D"
    }
  }
);
Resultado:
{
  "_id": 1,
  "status": "D",
  "lastModified": ISODate("2020-01-22T21:21:41.052Z"),
  "cancellation": {
    "date": Timestamp(1579728101, 1),
    "reason": "user request"
  }
}

//OPERADOR $rename
$rename: renomear um atributo de um ou mais documentos;
Exemplo:
use conteudo_trybe;
db.fruits.insertOne(
  { _id: 100, name: "Banana", quantity: 100, inStock: true }
);
db.fruits.updateOne(
  { name: "Banana" },
  { $rename: {
      "name": "productName"
    }
  }
);
Resultado:
{ _id: 100, quantity: 100, inStock: true, productName: 'Banana' };

//OPERADOR $unset
$unset: Remove um ou mais campos de um documento;
Exemplo:
{
  _id: 100,
  productName: "Banana",
  quantity: 100,
  inStock: true
}

db.fruits.updateMany(
  { productName: "Banana" },
  { $unset: { quantity: "" } }
);

Resultado:
{
  _id: 100,
  productName: "Banana",
  inStock: true
}


